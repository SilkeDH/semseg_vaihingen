##################
# Run from ~/semseg as
# $> docker build -t dockerimage -f docker/Dockerfile.dev .
# Then use as
# $> docker run -ti -v ~/semseg:/srv/app dockerimage /bin/bash
##################
# Base image, e.g. tensorflow/tensorflow:1.7.0
FROM tensorflow/tensorflow

LABEL maintainer='G.Cavallaro (FZJ), M.Goetz (KIT), V.Kozlov (KIT)'
# 2D semantic segmentation (Vaihingen dataset)

RUN DEBIAN_FRONTEND=noninteractive apt-get update && \
    apt-get install -y --no-install-recommends \
         git \
         curl \
         wget \
         python-setuptools \
         python-pip \
         python-wheel && \ 
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /root/.cache/pip/* && \
    rm -rf /tmp/*

# Set LANG environment
ENV LANG C.UTF-8

# Set the working directory
WORKDIR /srv

# install rclone
RUN wget https://downloads.rclone.org/rclone-current-linux-amd64.deb && \
    dpkg -i rclone-current-linux-amd64.deb && \
    apt install -f && \
    mkdir /srv/.rclone/ && touch /srv/.rclone/rclone.conf && \
    rm rclone-current-linux-amd64.deb && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /root/.cache/pip/* && \
    rm -rf /tmp/*

ENV RCLONE_CONFIG /srv/.rclone/rclone.conf

# Install DEEPaaS from PyPi
# Install FLAAT (FLAsk support for handling Access Tokens)
RUN pip install --no-cache-dir \
        'deepaas>=0.4.0' \
        flaat && \
    rm -rf /root/.cache/pip/* && \
    rm -rf /tmp/*

# Disable FLAAT authentication by default
ENV DISABLE_AUTHENTICATION_AND_ASSUME_AUTHENTICATED_USER yes


# Install python packages listed in requirements-dev.txt
COPY requirements-dev.txt /srv
RUN pip --no-cache-dir install -r /srv/requirements-dev.txt && \
    rm -rf /root/.cache/pip/* && \
    rm -rf /tmp/*


### (OPTIONAL!) If you want to use Jupyter, uncomment and rebuild the image:
#RUN pip --no-cache-dir install jupyterlab && \
#    python -m ipykernel.kernelspec && \
#    rm -rf /root/.cache/pip/* && \
#    rm -rf /tmp/*
#
## Set up our notebook config.
#ENV JUPYTER_CONFIG_DIR /srv/.jupyter/
#COPY docker/jupyter/jupyter_notebook_config.py /srv/.jupyter/
#COPY docker/jupyter/run_jupyter.sh /
## For Jupyter terminal
#ENV SHELL /bin/bash
#EXPOSE 8888
###

# Open DEEPaaS port
EXPOSE 5000

# Open Jupyter port
# REMINDER: Tensorflow Docker Images already EXPOSE ports 6006 and 8888
EXPOSE 6006

CMD /bin/bash
